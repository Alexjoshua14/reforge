/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ../../../../public/eye/Eye.glb --types 
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { GroupProps, useLoader } from '@react-three/fiber'
import { useInView } from 'framer-motion'

type GLTFResult = GLTF & {
  nodes: {
    Pupil: THREE.Mesh
    Eyeball: THREE.Mesh
    Iris: THREE.Mesh
  }
  materials: {
    Pupil: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ActionName = 'PupilAction'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

interface ModelProps extends GroupProps {
  animate?: boolean
}

export function Model({ animate, ...props }: ModelProps) {
  const group = useRef<THREE.Group>(null)
  const eyeRef = useRef(null)
  const { nodes, materials, animations } = useGLTF('/eye/Eye.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)

  const irisColorMap = useLoader(THREE.TextureLoader,
    '/eye/Iris_Material.png'
  )

  const eyeballColorMap = useLoader(THREE.TextureLoader,
    '/eye/Eyeball_Material.png'
  )

  useEffect(() => {
    if (animate) {
      console.log("Playing animation: ", actions.PupilAction)
      actions.PupilAction?.play()
    } else {
      console.log("Stopping animation: ", actions.PupilAction)
      actions.PupilAction?.stop()
    }

  }, [actions.PupilAction, animate])


  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene" ref={eyeRef}>
        <pointLight name="Point" intensity={135878.533} decay={2} position={[0, 1.172, 7.38]} rotation={[-Math.PI / 2, 0, 0]} />
        <pointLight name="Point002" intensity={54351.413} decay={2} position={[-3.164, -14.643, -26.708]} rotation={[-Math.PI / 2, 0, 0]} scale={0.797} />
        <pointLight name="Point003" intensity={54351.413} decay={2} position={[3.005, 13.507, -26.708]} rotation={[-Math.PI / 2, 0, 0]} scale={0.797} />
        <mesh name="Pupil" geometry={nodes.Pupil.geometry}>
          <meshBasicMaterial map={eyeballColorMap} />
        </mesh>
        <mesh name="Eyeball" geometry={nodes.Eyeball.geometry}>
          <meshBasicMaterial map={eyeballColorMap} />
        </mesh>
        <mesh name="Iris" geometry={nodes.Iris.geometry}>
          <meshBasicMaterial map={irisColorMap} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/Eye.glb')
